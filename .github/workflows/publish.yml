name: Publish release
on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  run-ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml
  upload:
    name: Upload to partner blob container
    needs: run-ci
    runs-on: ubuntu-latest
    steps:
      - name: Download distributions
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: dists
          path: dist/
      - name: Get package version
        run: |
          azstoragetorch_version=$(ls dist/azstoragetorch-*.whl | head -n 1 | cut -d- -f2)
          test -n "$azstoragetorch_version"
          echo "AZSTORAGETORCH_VERSION=$azstoragetorch_version" >> "$GITHUB_ENV"
      - name: Azure login
        uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Upload distributions to blob container
        uses: azure/cli@965c8d7571d2231a54e321ddd07f7b10317f34d9
        with:
          azcliversion: 2.62.0
          # NOTE: Using "blob upload" command instead of "blob upload-batch" because "blob upload-batch" does not
          # return a nonzero rc on upload failures. It instead returns a list of blobs that were successfully updated
          # meaning additional logic is required to determine if all files were uploaded and fail the step if they
          # were not.
          inlineScript: |
            set -x
            cd dist
            for dist in *;
            do
              az storage blob upload -f "$dist" --account-name kyleknappgithubdemo -c drops -n "azstoragetorch/python/$AZSTORAGETORCH_VERSION/$dist" --auth-mode login --overwrite
            done
